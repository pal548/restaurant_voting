DROP TABLE votes
IF EXISTS;
DROP TABLE user_roles
IF EXISTS;
DROP TABLE menu_items
IF EXISTS;
DROP TABLE restaurants
IF EXISTS;
DROP TABLE users
IF EXISTS;
DROP SEQUENCE global_seq
IF EXISTS;

CREATE SEQUENCE GLOBAL_SEQ
  AS INTEGER
  START WITH 100000;

CREATE TABLE users
(
  id       INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  login    VARCHAR(20)             NOT NULL,
  email    VARCHAR(255)            NOT NULL,
  name     VARCHAR(255)            NOT NULL,
  password VARCHAR(255)            NOT NULL,
  enabled  BOOLEAN DEFAULT TRUE    NOT NULL
);
CREATE UNIQUE INDEX users_unique_login_idx
  ON USERS (login);
CREATE UNIQUE INDEX users_unique_email_idx
  ON USERS (email);

CREATE TABLE user_roles
(
  user_id INTEGER NOT NULL,
  role    VARCHAR(30),
  CONSTRAINT user_roles_idx UNIQUE (user_id, role),
  FOREIGN KEY (user_id) REFERENCES USERS (id)
    ON DELETE CASCADE
);

CREATE TABLE restaurants
(
  id      INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  name    VARCHAR(255) NOT NULL,
  address VARCHAR(255) NOT NULL
);

CREATE TABLE menu_items
(
  id            INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  restaurant_id INTEGER        NOT NULL,
  day           DATE           NOT NULL,
  name          VARCHAR(100),
  price         DECIMAL(20, 4) NOT NULL,
  FOREIGN KEY (restaurant_id) REFERENCES restaurants (id)
    ON DELETE CASCADE
);
CREATE INDEX MENU_ITEMS__DAY_IDX
  ON MENU_ITEMS (DAY);
CREATE UNIQUE INDEX MENU_ITEMS__UNIQUE_IDX
  ON MENU_ITEMS (DAY, RESTAURANT_ID, NAME);

CREATE TABLE VOTES
(
  USER_ID       INTEGER NOT NULL
    CONSTRAINT VOTES_USER_FK
    REFERENCES USERS
  ON delete CASCADE,
  DAY           DATE    NOT NULL,
  RESTAURANT_ID INTEGER NOT NULL
    CONSTRAINT VOTES_RESTAURANT_FK
    REFERENCES RESTAURANTS
  ON delete CASCADE,
  CONSTRAINT VOTES__UNIQUE
  UNIQUE (USER_ID, DAY, RESTAURANT_ID)
);


